# -*- coding: utf-8 -*-
"""emsable.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YFaccI6nxB2WE_8Gv_VGz2vEdPkPxPh-
"""

import pandas as pd 
import matplotlib as plt 
import seaborn as sns

df = pd.read_csv('diabetes.csv')

df.head ()

df.shape

df.info()

df["Outcome"].value_counts()

df.boxplot(figsize=(13,5))

sns.boxplot(data=df,orient='h')

sns.scatterplot(x=df['Insulin'],y=df['Outcome'])

X=df.drop('Outcome',axis = 1 )

Y= df['Outcome']

sns.countplot(Y)

from sklearn.ensemble import VotingClassifier

from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neural_network import MLPClassifier
from sklearn import svm
from sklearn.model_selection import train_test_split

from sklearn.metrics import classification_report

m1=KNeighborsClassifier()
m2=LogisticRegression()
m3=DecisionTreeClassifier()
m4=MLPClassifier()
m5=svm.SVC(kernel='linear')

model = VotingClassifier([('knn',m1),('lr',m2),('dt',m3),('mlp',m4),('svc',m5)])

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=.2)

model.fit(X_train,Y_train)

Y_pred = model.predict(X_test)

sns.histplot(Y_pred)

print(classification_report(Y_pred,Y_test))



